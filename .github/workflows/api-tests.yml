name: API Tests (Postman/Newman)

on:
  push:
    branches: [ main, master ]
  pull_request:

jobs:
  postman:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # --- Python/Django ---
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install backend deps
        run: |
          cd backend
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt

      - name: Django migrate
        run: |
          cd backend
          python manage.py migrate --noinput

      - name: Create test superuser
        run: |
          cd backend
          echo "from django.contrib.auth import get_user_model; User = get_user_model(); User.objects.create_superuser('admin', 'admin@example.com', 'password') if not User.objects.filter(username='admin').exists() else None" | python manage.py shell

      - name: Start Django server
        run: |
          cd backend
          nohup python manage.py runserver 0.0.0.0:8000 --noreload > django.log 2>&1 &
          echo $! > django.pid
          sleep 5

      - name: Wait for API to be ready
        run: |
          for i in {1..30}; do
            if curl -s http://127.0.0.1:8000/api/health/ | grep -q "ok"; then
              echo "API is ready!"
              exit 0
            fi
            echo "Waiting for API to be ready... attempt $i"
            sleep 2
          done
          echo "API did not become ready in time"
          cat backend/django.log
          exit 1

      # --- Node/Newman ---
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install Newman
        run: npm i -g newman newman-reporter-htmlextra

      - name: Run Postman tests
        run: |
          mkdir -p reports/postman
          newman run tests/postman/postman_collection.json \
            -e tests/postman/postman_environment_local.json \
            --env-var "baseUrl=http://127.0.0.1:8000" \
            --reporters cli,htmlextra \
            --reporter-htmlextra-export reports/postman/report.html
        continue-on-error: true

      - name: Show Django log on failure
        if: failure()
        run: |
          echo "--- Django Server Log ---"
          cat backend/django.log || true

      - name: Upload Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: postman-report
          path: reports/postman/report.html
          retention-days: 7

      - name: Stop Django server
        if: always()
        run: |
          if [ -f backend/django.pid ]; then
            kill $(cat backend/django.pid) 2>/dev/null || true
            rm -f backend/django.pid
          fi